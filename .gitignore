8 - Forclas Romina
romina_91952
Compartiendo su pantalla
8 - Forclas Romina ‚Äî 18/6/25, 17:46
<LinearLayout
    xmlns:android="http://schemas.android.com/apk/res/android"
    android:orientation="vertical"
    android:padding="12dp"
    android:layout_width="match_parent"
    android:layout_height="wrap_content">

    <TextView android:id="@+id/textMateria"
        android:textStyle="bold"
        android:textSize="18sp"
        android:textColor="#000000"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"/>

    <TextView android:id="@+id/textNota"
        android:textSize="16sp"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"/>

    <TextView android:id="@+id/textEstado"
        android:textSize="14sp"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"/>

    <TextView android:id="@+id/textVencimiento"
        android:textSize="14sp"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"/>

    <TextView android:id="@+id/textAsistencia"
        android:textSize="14sp"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"/>
</LinearLayout>
8 - Forclas Romina ‚Äî 18/6/25, 17:55
class FragmentNotas : Fragment() {

    override fun onCreateView(
        inflater: LayoutInflater, container: ViewGroup?,
        savedInstanceState: Bundle?
    ): View? {
        val view = inflater.inflate(R.layout.fragment_notas, container, false)

        val recyclerView = view.findViewById<RecyclerView>(R.id.recyclerNotas)
        recyclerView.layoutManager = LinearLayoutManager(requireContext())
        recyclerView.adapter = NotaMateriaCompletaAdapter(MockData.getNotasMateriasCompletas())

        return view
    }
}
8 - Forclas Romina ‚Äî 18/6/25, 18:25
https://docs.google.com/document/d/1SmzfrroNmO5bOr6ChtmIMFXNk2KXMmTdv2g7_ywZiRs/edit?tab=t.0
Google Docs
G1 TP Investigaci√≥n: IoT
INSTITUTO DE FORMACI√ìN T√âCNICA SUPERIOR N.¬∫ 18 IOT INTERNET DE LAS COSAS Tecnolog√≠as de la informaci√≥n Docente: Martin Santoro GRUPO 1 Ludmila Brizuela ‚Äì DNI:44205889 ‚Äì Email: brizuelal127@gmail.com Mercedes Marighetti ‚Äì DNI: 35678820 ‚Äì Email: mercedes.marighetti@gmail.com Ro...
Imagen
Mech Marighetti ‚Äî 22/6/25, 17:17
FATAL EXCEPTION: main (Ask Gemini)
                                                                                                    Process: com.example.tsdsapp, PID: 10493
                                                                                                    java.lang.ArrayIndexOutOfBoundsException: length=2; index=2
                                                                                                        at java.util.Arrays$ArrayList.get(Arrays.java:4245)
                                                                                                        at com.example.tsdsapp.ui.adapter.MateriaAdapter.onBindViewHolder(MateriaAdapter.kt:29)
                                                                                                        at com.example.tsdsapp.ui.adapter.MateriaAdapter.onBindViewHolder(MateriaAdapter.kt:11)
8 - Forclas Romina ‚Äî 22/6/25, 17:19
Ese error que est√°s viendo:

perl
Copiar
Editar
java.lang.ArrayIndexOutOfBoundsException: length=2; index=2
significa que tu adapter (MateriaAdapter) est√° intentando acceder al √≠ndice 2 de una lista que solo tiene 2 elementos (√≠ndices 0 y 1). Es decir, te est√°s pasando del tama√±o del array o lista.

üìçD√≥nde est√° el problema
La excepci√≥n apunta espec√≠ficamente a esta l√≠nea:

makefile
Copiar
Editar
MateriaAdapter.kt:29
Y tambi√©n a:

makefile
Copiar
Editar
MateriaAdapter.kt:11
Eso indica que probablemente en el m√©todo onBindViewHolder est√°s accediendo as√≠:

kotlin
Copiar
Editar
val materia = listaMaterias[position]
Y position est√° siendo 2 cuando la lista tiene solo 2 elementos.

‚úÖ Posibles soluciones
Revis√° el tama√±o de la lista que us√°s en el adapter.
Asegurate de que no haya un desfasaje entre la cantidad real de elementos y lo que devuelve getItemCount().

Verific√° getItemCount()
Asegurate de que retorne correctamente el tama√±o de tu lista:

kotlin
Copiar
Editar
override fun getItemCount(): Int {
    return listaMaterias.size
}
Debug r√°pido: agreg√° un log
Pod√©s agregar esto para ver qu√© est√° pasando:

kotlin
Copiar
Editar
Log.d("AdapterDebug", "Position: $position, Size: ${listaMaterias.size}")
Ejemplo de revisi√≥n completa de onBindViewHolder:

kotlin
Copiar
Editar
override fun onBindViewHolder(holder: MateriaViewHolder, position: Int) {
    if (position < listaMaterias.size) {
        val materia = listaMaterias[position]
        holder.bind(materia)
    } else {
        Log.e("AdapterError", "Invalid position: $position, size: ${listaMaterias.size}")
    }
}
8 - Forclas Romina ‚Äî 22/6/25, 17:37
override fun getItemCount(): Int {
    return listaMaterias.size
}
8 - Forclas Romina ‚Äî 22/6/25, 18:37
<LinearLayout
    xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="wrap_content"
    android:orientation="vertical"
    android:padding="16dp">

    <TextView
        android:id="@+id/textMateria"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Nombre de materia"
        android:textSize="18sp"
        android:textStyle="bold"/>

    <LinearLayout
        android:id="@+id/layoutNotas"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:orientation="vertical"/>
</LinearLayout>
override fun onBindViewHolder(holder: MateriaViewHolder, position: Int) {
    val materia = materias[position]
    holder.textMateria.text = materia.materia

    // Limpiar vistas anteriores (muy importante)
    holder.layoutNotas.removeAllViews()

    // Agregar una TextView por cada nota
    for (nota in materia.notas) {
        val textView = TextView(holder.itemView.context).apply {
            text = "${nota.nombreNota}: ${nota.puntaje}"
            textSize = 16f
        }
        holder.layoutNotas.addView(textView)
    }
}
override fun onBindViewHolder(holder: MateriaViewHolder, position: Int) {
    val materia = materias[position]
    holder.textMateria.text = materia.materia

    // Limpiar vistas anteriores (muy importante)
    holder.layoutNotas.removeAllViews()

    // Agregar una TextView por cada nota
    for (nota in materia.notas) {
        val textView = TextView(holder.itemView.context).apply {
            text = "${nota.nombreNota}: ${nota.puntaje}"
            textSize = 16f
        }
        holder.layoutNotas.addView(textView)
    }
}
class MateriaViewHolder(itemView: View) : RecyclerView.ViewHolder(itemView) {
    val textMateria: TextView = itemView.findViewById(R.id.textMateria)
    val layoutNotas: LinearLayout = itemView.findViewById(R.id.layoutNotas)
}
Mech Marighetti ‚Äî 22/6/25, 19:04
https://github.com/MechMarighetti/TSDSIFTSapp.git
GitHub
GitHub - MechMarighetti/TSDSIFTSapp
Contribute to MechMarighetti/TSDSIFTSapp development by creating an account on GitHub.
Contribute to MechMarighetti/TSDSIFTSapp development by creating an account on GitHub.
Maccari, Maria Lujan - 12 ‚Äî 23/6/25, 19:25
https://supabase.com/dashboard/project/qwejflqrduhqtxwyxrit
Supabase
Supabase Studio
Imagen
FlorCampos ‚Äî 23/6/25, 19:26
florenciacampos460@gmail.com
Lolu. ‚Äî 23/6/25, 19:26
lolarodfarias@gmail.com
Teusa28 ‚Äî 23/6/25, 19:27
teosordo98@gmail.com
FlorCampos ‚Äî 23/6/25, 19:29
florenciacampos09@hotmail.com.ar
8 - Forclas Romina ‚Äî 26/6/25, 21:12
https://www.blackbox.ai/?q=üòéHow+to+center+a+divüòé&gad_source=1&gad_campaignid=22041835892&gbraid=0AAAAAqhUz7bptHoxlS1VEEhPLLkaxF8mY&gclid=CjwKCAjw3_PCBhA2EiwAkH_j4iX-i53eF67ZgdktRsX3NkTbwL0srq6sEqm3_IjOTy1AJHGXfTs5rBoCA2QQAvD_BwE
BLACKBOX.AI
BLACKBOX.AI is the best ai agent, built to transform the way you work and learn and trusted by +10 M users and Fortune 500 companies
Lolu. ‚Äî 26/6/25, 21:44
me voy a ba√±ar
Mech Marighetti ‚Äî 26/6/25, 21:58
me escucha mi amiga
me voy a duchar
ma√±ana sigoo
un besote
8 - Forclas Romina ‚Äî 28/6/25, 18:00
‚úÖ Pasos para generar un APK en Android Studio:
Verific√° que la app compile correctamente
Asegurate de que el proyecto funcione bien y no tenga errores (probalo en un emulador o celular).

Seleccion√° el modo de compilaci√≥n
Pod√©s generar el APK en modo Debug (para pruebas) o Release (para distribuir).

üîπ Opci√≥n 1: Generar APK modo Debug (r√°pido para pruebas)
Hac√© clic en Build (en la barra superior).

Luego eleg√≠: Build Bundle(s) / APK(s) ‚Üí Build APK(s).

Esper√° a que compile.

Al finalizar, Android Studio mostrar√° un bot√≥n "locate" para ir a la carpeta donde est√° el APK generado.

üìÇ Ruta t√≠pica:

ruby
Copiar
Editar
<tu-proyecto>/app/build/outputs/apk/debug/app-debug.apk
üîπ Opci√≥n 2: Generar APK modo Release (para distribuir)
Este paso es ideal si pens√°s compartir la app fuera de Play Store.

Cre√° un keystore (clave de firma):

Build ‚Üí Generate Signed Bundle / APK

Eleg√≠ APK y hac√© clic en Next.

Seleccion√° o cre√° un keystore (una clave para firmar tu APK).

Ingres√° los datos requeridos (nombre, contrase√±a, alias, etc.).

Eleg√≠ el tipo de build: release.

En la siguiente ventana, seleccion√°:

V1 (Jar Signature) ‚úîÔ∏è

V2 (Full APK Signature) ‚úîÔ∏è

Hac√© clic en Finish.

üìÇ Ruta t√≠pica:

ruby
Copiar
Editar
<tu-proyecto>/app/build/outputs/apk/release/app-release.apk
üõ†Ô∏è Tips extra:
El APK modo Debug lo pod√©s instalar directamente en tu celular para pruebas.

El APK modo Release es el que usar√≠as si vas a subir la app a Google Play (aunque Google ahora recomienda usar .aab, Android App Bundle).
Mech Marighetti ‚Äî 1/7/25, 17:21
override fun onBindViewHolder(holder: ViewHolder, position: Int) {
        val materia = lista[position]
        holder.nombre.text = materia.materia
        holder.porcentaje.text = if (materia.porcentajeAsistencia == 0)
            "A√∫n no se carg√≥ la asistencia" else "${materia.porcentajeAsistencia}%"
                val context = holder.itemView.context


        val color = when {
            materia.porcentajeAsistencia <= 30 -> ContextCompat.getDrawable(context, R.color.Libre)
            materia.porcentajeAsistencia <= 60 -> ContextCompat.getDrawable(context, R.color.Regular)
            materia.porcentajeAsistencia <= 70 -> ContextCompat.getDrawable(context, R.color.Zona_Promo)
            else ->  ContextCompat.getDrawable(context, R.color.Promocionado)

        }
        holder.barra.progressDrawable = color
        holder.barra.progress = materia.porcentajeAsistencia
    }
8 - Forclas Romina ‚Äî 1/7/25, 17:22
class ViewHolder(itemView: View): RecyclerView.ViewHolder(itemView) {
    val nombre: TextView = itemView.findViewById(R.id.nombre)
    val porcentaje: TextView = itemView.findViewById(R.id.porcentaje)
    val barra: ProgressBar = itemView.findViewById(R.id.barra) // <- Este es importante
}
val color = when {
    materia.porcentajeAsistencia <= 30 -> ContextCompat.getDrawable(context, R.color.Libre)
    materia.porcentajeAsistencia <= 60 -> ContextCompat.getDrawable(context, R.color.Regular)
    materia.porcentajeAsistencia <= 70 -> ContextCompat.getDrawable(context, R.color.Zona_Promo)
    else ->  ContextCompat.getDrawable(context, R.color.Promocionado)
}
holder.barra.progressDrawable = color
val color = when {
    materia.porcentajeAsistencia <= 30 -> ContextCompat.getColor(context, R.color.Libre)
    materia.porcentajeAsistencia <= 60 -> ContextCompat.getColor(context, R.color.Regular)
    materia.porcentajeAsistencia <= 70 -> ContextCompat.getColor(context, R.color.Zona_Promo)
    else -> ContextCompat.getColor(context, R.color.Promocionado)
}
holder.barra.progressTintList = ColorStateList.valueOf(color)
holder.barra.progress = materia.porcentajeAsistencia
8 - Forclas Romina ‚Äî 1/7/25, 17:44
<color name="Libre">#FF0000</color>
<color name="Regular">#FFA500</color>
<color name="Zona_Promo">#FFFF00</color>
<color name="Promocionado">#00FF00</color>
Lolu. ‚Äî 1/7/25, 18:35
https://meet.google.com/arp-jvgy-wtj
Meet
Real-time meetings by Google. Using your browser, share your video, desktop, and presentations with teammates and customers.
Imagen
Teusa28 ‚Äî 6/9/25, 10:48
https://developer.mozilla.org/es/docs/Learn_web_development/Extensions/Server-side/Django/development_environment
MDN Web Docs
Puesta en marcha de un entorno de desarrollo Django - Aprende desar...
Ahora que sabes para qu√© se utiliza Django, te ense√±aremos c√≥mo configurar y probar un entorno de desarrollo Django en Windows, Linux (Ubuntu), y Mac OS X ‚Äî cualquiera que sea el sistema operativo com√∫n que est√©s utilizando, este art√≠culo te dar√° lo que necesitas para ser capaz de empezar a desarrollar aplicaciones Django.
The MDN Web Docs logo, featuring a blue accent color, displayed on a solid black background.
https://youtu.be/_ghiAv5A_eo?si=aWjTUiN9oSue-5KY
YouTube
TheHarryCode
Soluci√≥n (FIX): PYTHON: No se encontr¬æ Python; ejecuta sin argume...
Imagen
8 - Forclas Romina ‚Äî 6/9/25, 11:33
python3 -m venv env
source env/bin/activate   # activa el entorno
python -m pip install --upgrade pip
Mech Marighetti ‚Äî 6/9/25, 11:52
py
GitHub
GitHub - mdn/django-locallibrary-tutorial: Local Library website wr...
Local Library website written in Django; example for the MDN server-side development Django module: https://developer.mozilla.org/en-US/docs/Learn/Server-side/Django. - mdn/django-locallibrary-tuto...
Local Library website written in Django; example for the MDN server-side development Django module: https://developer.mozilla.org/en-US/docs/Learn/Server-side/Django. - mdn/django-locallibrary-tuto...
Mech Marighetti ‚Äî 6/9/25, 12:47
https://github.com/MechMarighetti/DjangoLibrosBackend/invitations
8 - Forclas Romina ‚Äî 15/9/25, 19:11
üéÇ EDT ‚Äì Fiesta de Cumplea√±os
Planificaci√≥n

1.1 Definir fecha y hora
1.2 Seleccionar lugar (casa, sal√≥n, parque)
1.3 Elaborar lista de invitados
1.4 Definir presupuesto

Invitaciones

2.1 Dise√±ar invitaciones (digitales o f√≠sicas)
2.2 Enviar invitaciones
2.3 Confirmar asistencia (RSVP)

Decoraci√≥n

3.1 Seleccionar tem√°tica (colores, personajes, estilo)
3.2 Comprar adornos (globos, guirnaldas, centros de mesa)
3.3 Montar decoraci√≥n en el lugar

Catering / Comida y Bebida

4.1 Definir men√∫ (picada, plato principal, postres)
4.2 Comprar alimentos y bebidas
4.3 Contratar servicio de catering (opcional)
4.4 Preparar torta de cumplea√±os

Animaci√≥n y M√∫sica

5.1 Preparar lista de m√∫sica o contratar DJ
5.2 Juegos y actividades (ni√±os/adultos)
5.3 Contratar animador (opcional)

Log√≠stica

6.1 Alquiler de mesas, sillas y manteler√≠a (si es necesario)
6.2 Transporte (invitados, materiales)
6.3 Iluminaci√≥n y sonido

Fiesta

7.1 Recepci√≥n de invitados
7.2 Desarrollo de actividades/juegos
7.3 Cantar el cumplea√±os y cortar la torta
7.4 Entrega de souvenirs (si hay)

Cierre

8.1 Limpieza del lugar
8.2 Devolver elementos alquilados
8.3 Agradecer a los invitados
Maccari, Maria Lujan - 12 ‚Äî 15/9/25, 19:20
Planificaci√≥n



Objetivo: que el cumplea√±ero no se entere.Fecha: el mismo d√≠a del cumplea√±os (aunque hay que distraerlo).Recursos: invitados, comida, decoraci√≥n, m√∫sica y torta.Riesgo: que a alguien se le escape sin querer y arruine la sorpresa.







Organizaci√≥n


Se crean roles:

C√≥mplice: mantiene al cumplea√±ero ocupado.Equipo de decoraci√≥n: infla globos y coloca adornos.Equipo de compras: consigue comida, bebida y la torta.Equipo de m√∫sica: prepara una lista de canciones para pasar en la fiesta.







Direcci√≥n


Se dan instrucciones claras:

Nadie llega tarde ni estaciona cerca de la casa del cumplea√±ero.El grupo de WhatsApp se llama "Reuni√≥n de Estudio" para no levantar sospechas.La torta se guarda en la heladera de un vecino para que no se note.





Integraci√≥n



Todos deben estar listos y escondidos antes de que llegue el cumplea√±ero. El c√≥mplice avisa en el momento exacto: ‚ÄúYa estamos llegando‚Äù. Todos esperan la se√±al para gritar juntos: ‚Äú¬°Sorpresa!‚Äù.




Control


Durante la fiesta se revisa que haya suficiente comida, bebida y m√∫sica.

Evaluaci√≥n final: Si el cumplea√±ero se sorprendi√≥ y se emocion√≥, fue un √©xito. En cambio, si sospech√≥ desde el principio, habr√° que mejorar el plan para la pr√≥xima vez.
8 - Forclas Romina ‚Äî 15/9/25, 19:29
Imagen
Imagen
8 - Forclas Romina ‚Äî 15/9/25, 19:43
https://docs.google.com/document/d/1s1HoGaJ2UECcyRoKZuC94y4V27bSC59hQQ4LVLXshaU/edit?usp=sharing
Google Docs
clase 8 ingenieria
Imagen
8 - Forclas Romina ‚Äî 16/9/25, 19:51
python3 -m venv env
django-admin startproject mi_libreria .
python manage.py startapp mi_libreria
8 - Forclas Romina ‚Äî 16/9/25, 19:58
@admin.register(Prestamo)
class PrestamoAdmin(admin.ModelAdmin):
    list_display = ('libro', 'usuario', 'fecha_prestamo', 'fecha_devolucion')
    list_filter = ('fecha_prestamo', 'fecha_devolucion')
8 - Forclas Romina ‚Äî 16/9/25, 20:10
https://mxda038146.rna1.blindsidenetworks.com/html5client/?sessionToken=looebrhihvxltj71
Mech Marighetti ‚Äî 17/9/25, 19:46
no te esucho
8 - Forclas Romina ‚Äî 27/9/25, 11:48
hola lumi, hoy necesito hacer un documento de presentacion para un tp integrador en django, es sin codigo, la idea es dise√±ar una app para gestione gastos, deberia de poder categorizar gastos, planificar gastos, registrar ingresos, calcular porcentajes, visualizar los gastos, categoria y periodo, le pondriamos una api de dolar hoy, comentarios y descripcion, subir fotos de tickets (opcional). tambien la pensamos para que se pueda adaptar a peque√±os emprendedores no solo de uso personal y pensamos que registre cobros, pedidos, ingresos fijos, aportes de capital, que registre cafecitos o aportes voluntarios, registros de gastos (alquiler, proveedorees, materias primas, etc), si se pudiera agenda de turnos, ya que esta pensada a distintos rubros, notificaciones de vencimientos, objetivos de ahorro, presupuestos
Maccari, Maria Lujan - 12 ‚Äî 29/9/25, 19:17
Sistemas abiertos, cerrados y aislados (mixtos)

üîπ Sistema abierto: Intercambia materia y energ√≠a con el entorno.
Ejemplos:

Un ser humano (respira ox√≠geno, ingiere alimentos, libera desechos y calor).

Una planta (absorbe agua, nutrientes, CO‚ÇÇ y libera ox√≠geno y vapor de agua).

Una ciudad (flujo constante de personas, recursos y energ√≠a).

üîπ Sistema cerrado: Intercambia solo energ√≠a, no materia.
Ejemplos:

Una olla de presi√≥n (el calor entra o sale, pero no la materia).

Un radiador de calefacci√≥n (intercambia calor con el ambiente).

Un invernadero sellado (recibe energ√≠a solar, pero mantiene constante la materia en su interior).

üîπ Sistema aislado (o mixto): No intercambia ni materia ni energ√≠a con el entorno. En la pr√°ctica, son casi imposibles, pero se estudian como idealizaci√≥n.
Ejemplos:

Un termo perfecto (hipot√©tico, ya que en la realidad siempre hay m√≠nima p√©rdida de calor).

El universo como un todo (no hay "afuera" con el que intercambiar).

Un recipiente perfectamente sellado y aislado en laboratorio (ejemplo experimental).

Ejemplos de entrop√≠a y neguentrop√≠a

üìå Entrop√≠a (desorden creciente):

Hielo derriti√©ndose ‚Üí las mol√©culas pasan de orden s√≥lido a l√≠quido desordenado.

Habitaci√≥n desordenada ‚Üí con el tiempo, las cosas tienden al desorden si no se ordenan.

Combusti√≥n ‚Üí la energ√≠a concentrada en combustible se dispersa en calor, gases y movimiento.

üìå Neguentrop√≠a (orden creciente):

Un feto desarroll√°ndose en el √∫tero ‚Üí organizaci√≥n creciente de c√©lulas.

Fotos√≠ntesis en plantas ‚Üí convierte energ√≠a solar en glucosa, generando orden.

Un proyecto colaborativo bien organizado ‚Üí cada aporte ordena y estructura el conocimiento colectivo
8 - Forclas Romina ‚Äî 11/10/25, 17:09
from django.contrib import admin
from .models import Comprobante

admin.site.register(Comprobante)
Mech Marighetti ‚Äî 11/10/25, 17:15
(env) PS C:\Users\merce\IntegradorDjangoBackend\NuevoBackendGastos\Microfinanzas> python manage.py makemigrations
Traceback (most recent call last):
  File "C:\Users\merce\IntegradorDjangoBackend\NuevoBackendGastos\Microfinanzas\manage.py", line 22, in <module>
    main()
    ~~^^
  File "C:\Users\merce\IntegradorDjangoBackend\NuevoBackendGastos\Microfinanzas\manage.py", line 18, in main
    execute_from_command_line(sys.argv)
    ~~~~~^^^^^^^^^^
  File "C:\Users\merce\IntegradorDjangoBackend\NuevoBackendGastos\env\Lib\site-packages\django\core\management__init__.py", line 442, in execute_from_command_line
    utility.execute()
    ~~~^^
  File "C:\Users\merce\IntegradorDjangoBackend\NuevoBackendGastos\env\Lib\site-packages\django\core\management__init__.py", line 416, in execute
    django.setup()
    ~~^^
  File "C:\Users\merce\IntegradorDjangoBackend\NuevoBackendGastos\env\Lib\site-packages\django__init.py", line 24, in setup
    apps.populate(settings.INSTALLED_APPS)
    ~~~^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\merce\IntegradorDjangoBackend\NuevoBackendGastos\env\Lib\site-packages\django\apps\registry.py", line 91, in populate
    app_config = AppConfig.create(entry)
  File "C:\Users\merce\IntegradorDjangoBackend\NuevoBackendGastos\env\Lib\site-packages\django\apps\config.py", line 193, in create
    import_module(entry)
    ~~~^^^^^^^
  File "C:\Users\merce\AppData\Local\Programs\Python\Python313\Lib\importlib__init.py", line 88, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
           ~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "<frozen importlib._bootstrap>", line 1387, in _gcd_import
  File "<frozen importlib._bootstrap>", line 1360, in _find_and_load
  File "<frozen importlib._bootstrap>", line 1324, in _find_and_load_unlocked
ModuleNotFoundError: No module named 'apps.comprobantenuevo'
8 - Forclas Romina ‚Äî 11/10/25, 17:16
Microfinanzas/settings.py
Teusa28 ‚Äî 12:28
https://git-scm.com/install/windows
Teusa28 ‚Äî 12:35
\
:
>
Mech Marighetti ‚Äî 13:06
python manage.py migrate comprobante zero
Mech Marighetti ‚Äî 13:26
from django.contrib.auth.models import AbstractUser
class User(AbstractUser):
    ROLES = (
        ('reader', 'Lector'),
        ('librarian', 'Bibliotecario'),
        ('admin', 'Administrador')
    )
    role = models.CharField(max_length=10, choices=ROLES, default='reader')
    dni = models.CharField(max_length=20, unique=True)
    address = models.TextField()
    phone = models.CharField(max_length=20)
    score = models.FloatField(default=5.0)
    is_active_member = models.BooleanField(default=True)
    suspension_end_date = models.DateField(null=True, blank=True)

    def get_loan_limit(self):
        """Calcula el l√≠mite de pr√©stamos basado en el puntaje"""
        if self.score >= 4.5:
            return 5
        elif self.score >= 3.0:
            return 3
        elif self.score >= 1.0:
            return 1
        else:
            return 0

    class Meta:
        db_table = 'users'
        verbose_name = 'Usuario'
        verbose_name_plural = 'Usuarios'

    def str(self):
        return f"{self.username} ({self.get_role_display()})"
('owner', 'Due√±o'),
        ('marketing', 'Marketing'),
        ('finanzas', 'Finanzas')
Teusa28 ‚Äî 13:32
null=True, blank=True
8 - Forclas Romina ‚Äî 13:38
from django.db import models
from django.contrib.auth.models import AbstractUser
class Usuario(AbstractUser):
    ROLES = (
      ('owner', 'Due√±o'),
      ('marketing', 'Marketing'),
      ('finanzas', 'Finanzas'),
    )
    rol = models.CharField(max_length=10, choices=ROLES, default='owner')
    cuit = models.CharField(max_length=20, unique=True, null=True, blank=True)
    dni = models.CharField(max_length=20, unique=True)
    direccion = models.TextField()
    telefono = models.CharField(max_length=20)
    email = models.EmailField(unique=True)
    miembroActivo = models.BooleanField(default=True)
    fechaDeCreacion= models.DateField(null=True, blank=True)

    def get_loan_limit(self):
        """Calcula el l√≠mite de pr√©stamos basado en el puntaje"""
        if self.score >= 4.5:
            return 5
        elif self.score >= 3.0:
            return 3
        elif self.score >= 1.0:
            return 1
        else:
            return 0

    class Meta:
        db_table = 'users'
        verbose_name = 'Usuario'
        verbose_name_plural = 'Usuarios'

    def str(self):
        return f"{self.username} ({self.get_role_display()})"


Create your models here.
from django.db import models
from usuario.models import Usuario

class Emprendimiento(models.Model):
    nombre = models.CharField(max_length=100)
    descripcion = models.TextField()
    fecha_creacion = models.DateField(auto_now_add=True)
    usuario = models.ForeignKey(Usuario, on_delete=models.CASCADE, related_name='emprendimientos')

    def str(self):
        return self.nombre

Create your models here.
8 - Forclas Romina ‚Äî 13:54
https://github.com/RominaForclas
GitHub
RominaForclas - Overview
Estudiante de segundo a√±o en la tecnicatura de Desarrollo de Software en el IFTS nro 18 - RominaForclas
Imagen
Mech Marighetti ‚Äî 13:55
https://github.com/MechMarighetti/Microfinanzas-Backend/invitations
# Byte-compiled / optimized / DLL files
__pycache__/
*.py[codz]
*$py.class

# C extensions
Expandir
message.txt
5 KB
Ôªø
# Byte-compiled / optimized / DLL files
__pycache__/
*.py[codz]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py.cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# UV
#   Similar to Pipfile.lock, it is generally recommended to include uv.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#uv.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock
#poetry.toml

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#   pdm recommends including project-wide configuration in pdm.toml, but excluding .pdm-python.
#   https://pdm-project.org/en/latest/usage/project/#working-with-version-control
#pdm.lock
#pdm.toml
.pdm-python
.pdm-build/

# pixi
#   Similar to Pipfile.lock, it is generally recommended to include pixi.lock in version control.
#pixi.lock
#   Pixi creates a virtual environment in the .pixi directory, just like venv module creates one
#   in the .venv directory. It is recommended not to include this directory in version control.
.pixi

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.envrc
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be found at https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore
#  and can be added to the global gitignore or merged into this file.  For a more nuclear
#  option (not recommended) you can uncomment the following to ignore the entire idea folder.
#.idea/

# Abstra
# Abstra is an AI-powered process automation framework.
# Ignore directories containing user credentials, local state, and settings.
# Learn more at https://abstra.io/docs
.abstra/

# Visual Studio Code
#  Visual Studio Code specific template is maintained in a separate VisualStudioCode.gitignore 
#  that can be found at https://github.com/github/gitignore/blob/main/Global/VisualStudioCode.gitignore
#  and can be added to the global gitignore or merged into this file. However, if you prefer, 
#  you could uncomment the following to ignore the entire vscode folder
# .vscode/

# Ruff stuff:
.ruff_cache/

# PyPI configuration file
.pypirc

# Cursor
#  Cursor is an AI-powered code editor. `.cursorignore` specifies files/directories to
#  exclude from AI features like autocomplete and code analysis. Recommended for sensitive data
#  refer to https://docs.cursor.com/context/ignore-files
.cursorignore
.cursorindexingignore

# Marimo
marimo/_static/
marimo/_lsp/
__marimo__/
